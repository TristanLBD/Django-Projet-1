#!/usr/bin/env python
"""
Script d'initialisation de la base de donn√©es
Lancez avec: python init_db.py
"""

import os
import sys
import django

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'job_platform.settings')
django.setup()

from django.contrib.auth.models import User
from jobs.models import Job, Application
from companies.models import Company, CompanyPhoto
from accounts.models import UserProfile


def init_database():
    """Initialise la base de donn√©es avec des donn√©es de test"""
    print("üöÄ D√©but de l'initialisation de la base de donn√©es...")

    try:
        # Supprimer toutes les donn√©es existantes
        print("üóëÔ∏è  Suppression des donn√©es existantes...")
        Application.objects.all().delete()
        Job.objects.all().delete()
        CompanyPhoto.objects.all().delete()
        Company.objects.all().delete()
        UserProfile.objects.all().delete()
        User.objects.filter(is_superuser=False).delete()

        # Cr√©er un utilisateur de test
        print("üë§ Cr√©ation de l'utilisateur de test...")
        test_user, created = User.objects.get_or_create(
            username='testuser',
            defaults={
                'email': 'test@example.com',
                'first_name': 'Test',
                'last_name': 'User',
                'is_staff': True
            }
        )
        if created:
            test_user.set_password('testpass123')
            test_user.save()
            print("‚úÖ Utilisateur test cr√©√©")

        # Cr√©er des employeurs pour chaque entreprise
        print("üëî Cr√©ation des employeurs...")
        employers_data = [
            {
                'username': 'techcorp_employer',
                'email': 'employer@techcorp.fr',
                'first_name': 'Jean',
                'last_name': 'TechCorp',
                'password': 'techcorp123'
            },
            {
                'username': 'digital_employer',
                'email': 'employer@digitalmarketingpro.fr',
                'first_name': 'Marie',
                'last_name': 'Digital',
                'password': 'digital123'
            },
            {
                'username': 'green_employer',
                'email': 'employer@greenenergyplus.fr',
                'first_name': 'Pierre',
                'last_name': 'Green',
                'password': 'green123'
            },
            {
                'username': 'finance_employer',
                'email': 'employer@financeconsulting.fr',
                'first_name': 'Sophie',
                'last_name': 'Finance',
                'password': 'finance123'
            },
            {
                'username': 'creative_employer',
                'email': 'employer@creativedesignstudio.fr',
                'first_name': 'Lucas',
                'last_name': 'Creative',
                'password': 'creative123'
            }
        ]

        # Cr√©er les employeurs
        employers = []
        for data in employers_data:
            employer, created = User.objects.get_or_create(
                username=data['username'],
                defaults={
                    'email': data['email'],
                    'first_name': data['first_name'],
                    'last_name': data['last_name'],
                    'is_staff': True
                }
            )
            if created:
                employer.set_password(data['password'])
                employer.save()
                print(f"‚úÖ Employeur {data['username']} cr√©√©")
            employers.append(employer)

        # Donn√©es des entreprises
        companies_data = [
            {
                'name': 'TechCorp Solutions',
                'description': 'Entreprise leader dans le d√©veloppement de solutions technologiques innovantes.',
                'address': '15 Avenue de l\'Innovation, 75001 Paris',
                'phone': '01 42 34 56 78',
                'email': 'contact@techcorp.fr',
                'website': 'https://techcorp.fr',
                'employer': employers[0]
            },
            {
                'name': 'Digital Marketing Pro',
                'description': 'Agence de marketing digital sp√©cialis√©e dans la transformation num√©rique.',
                'address': '8 Rue du Digital, 69001 Lyon',
                'phone': '04 78 12 34 56',
                'email': 'contact@digitalmarketingpro.fr',
                'website': 'https://digitalmarketingpro.fr',
                'employer': employers[1]
            },
            {
                'name': 'Green Energy Plus',
                'description': 'Entreprise sp√©cialis√©e dans les √©nergies renouvelables et l\'efficacit√© √©nerg√©tique.',
                'address': '25 Boulevard Vert, 13001 Marseille',
                'phone': '04 91 23 45 67',
                'email': 'contact@greenenergyplus.fr',
                'website': 'https://greenenergyplus.fr',
                'employer': employers[2]
            },
            {
                'name': 'Finance Consulting',
                'description': 'Cabinet de conseil en finance et gestion d\'entreprise.',
                'address': '12 Place de la Finance, 31000 Toulouse',
                'phone': '05 61 34 56 78',
                'email': 'contact@financeconsulting.fr',
                'website': 'https://financeconsulting.fr',
                'employer': employers[3]
            },
            {
                'name': 'Creative Design Studio',
                'description': 'Studio de design cr√©atif sp√©cialis√© dans l\'identit√© visuelle et le branding.',
                'address': '7 Rue de la Cr√©ativit√©, 44000 Nantes',
                'phone': '02 40 12 34 56',
                'email': 'contact@creativedesignstudio.fr',
                'website': 'https://creativedesignstudio.fr',
                'employer': employers[4]
            }
        ]

        # Cr√©er les entreprises
        print("üè¢ Cr√©ation des entreprises...")
        companies = []
        for data in companies_data:
            company, created = Company.objects.get_or_create(
                name=data['name'],
                defaults={
                    'description': data['description'],
                    'address': data['address'],
                    'phone': data['phone'],
                    'email': data['email'],
                    'website': data['website'],
                    'is_active': True,
                    'created_by': data['employer']
                }
            )
            if created:
                print(f"‚úÖ Entreprise {data['name']} cr√©√©e")
            companies.append(company)

        # Donn√©es des offres d'emploi
        jobs_data = [
            # TechCorp Solutions
            {
                'title': 'D√©veloppeur Full Stack',
                'description': f"Description d√©taill√©e pour le poste de D√©veloppeur Full Stack chez {companies[0].name}.",
                'requirements': f"Pr√©requis pour le poste de D√©veloppeur Full Stack : exp√©rience requise, comp√©tences techniques, etc.",
                'benefits': 'T√©l√©travail, mutuelle, tickets restaurant',
                'contract_type': 'CDI',
                'experience_level': 'SENIOR',
                'salary_min': 45000,
                'salary_max': 80000,
                'location': 'Paris',
                'is_remote': True,
                'company': companies[0],
                'created_by': employers[0]
            },
            {
                'title': 'Data Scientist',
                'description': f"Description d√©taill√©e pour le poste de Data Scientist chez {companies[0].name}.",
                'requirements': f"Pr√©requis pour le poste de Data Scientist : exp√©rience requise, comp√©tences techniques, etc.",
                'benefits': 'T√©l√©travail, mutuelle, tickets restaurant',
                'contract_type': 'CDI',
                'experience_level': 'EXPERT',
                'salary_min': 45000,
                'salary_max': 80000,
                'location': 'Paris',
                'is_remote': True,
                'company': companies[0],
                'created_by': employers[0]
            },
            {
                'title': 'DevOps Engineer',
                'description': f"Description d√©taill√©e pour le poste de DevOps Engineer chez {companies[0].name}.",
                'requirements': f"Pr√©requis pour le poste de DevOps Engineer : exp√©rience requise, comp√©tences techniques, etc.",
                'benefits': 'T√©l√©travail, mutuelle, tickets restaurant',
                'contract_type': 'CDD',
                'experience_level': 'JUNIOR',
                'salary_min': 35000,
                'salary_max': 55000,
                'location': 'Paris',
                'is_remote': False,
                'company': companies[0],
                'created_by': employers[0]
            },
            {
                'title': 'Product Manager',
                'description': f"Description d√©taill√©e pour le poste de Product Manager chez {companies[0].name}.",
                'requirements': f"Pr√©requis pour le poste de Product Manager : exp√©rience requise, comp√©tences techniques, etc.",
                'benefits': 'T√©l√©travail, mutuelle, tickets restaurant',
                'contract_type': 'CDI',
                'experience_level': 'SENIOR',
                'salary_min': 45000,
                'salary_max': 80000,
                'location': 'Paris',
                'is_remote': True,
                'company': companies[0],
                'created_by': employers[0]
            },

            # Digital Marketing Pro
            {
                'title': 'Marketing Digital Manager',
                'description': f"Description d√©taill√©e pour le poste de Marketing Digital Manager chez {companies[1].name}.",
                'requirements': f"Pr√©requis pour le poste de Marketing Digital Manager : exp√©rience requise, comp√©tences techniques, etc.",
                'benefits': '√âquipe dynamique, formation continue, avantages sociaux',
                'contract_type': 'CDI',
                'experience_level': 'SENIOR',
                'salary_min': 45000,
                'salary_max': 80000,
                'location': 'Paris',
                'is_remote': True,
                'company': companies[1],
                'created_by': employers[1]
            },
            {
                'title': 'SEO Specialist',
                'description': f"Description d√©taill√©e pour le poste de SEO Specialist chez {companies[1].name}.",
                'requirements': f"Pr√©requis pour le poste de SEO Specialist : exp√©rience requise, comp√©tences techniques, etc.",
                'benefits': '√âquipe dynamique, formation continue, avantages sociaux',
                'contract_type': 'CDD',
                'experience_level': 'JUNIOR',
                'salary_min': 35000,
                'salary_max': 55000,
                'location': 'Paris',
                'is_remote': False,
                'company': companies[1],
                'created_by': employers[1]
            },
            {
                'title': 'Social Media Manager',
                'description': f"Description d√©taill√©e pour le poste de Social Media Manager chez {companies[1].name}.",
                'requirements': f"Pr√©requis pour le poste de Social Media Manager : exp√©rience requise, comp√©tences techniques, etc.",
                'benefits': '√âquipe dynamique, formation continue, avantages sociaux',
                'contract_type': 'CDI',
                'experience_level': 'JUNIOR',
                'salary_min': 35000,
                'salary_max': 55000,
                'location': 'Paris',
                'is_remote': True,
                'company': companies[1],
                'created_by': employers[1]
            },

            # Green Energy Plus
            {
                'title': 'Ing√©nieur √ânergies Renouvelables',
                'description': f"Description d√©taill√©e pour le poste d'Ing√©nieur √ânergies Renouvelables chez {companies[2].name}.",
                'requirements': f"Pr√©requis pour le poste d'Ing√©nieur √ânergies Renouvelables : exp√©rience requise, comp√©tences techniques, etc.",
                'benefits': 'Impact environnemental positif, √©quipe passionn√©e',
                'contract_type': 'CDI',
                'experience_level': 'SENIOR',
                'salary_min': 45000,
                'salary_max': 80000,
                'location': 'Lyon',
                'is_remote': False,
                'company': companies[2],
                'created_by': employers[2]
            },
            {
                'title': 'Technicien Maintenance',
                'description': f"Description d√©taill√©e pour le poste de Technicien Maintenance chez {companies[2].name}.",
                'requirements': f"Pr√©requis pour le poste de Technicien Maintenance : exp√©rience requise, comp√©tences techniques, etc.",
                'benefits': 'Impact environnemental positif, √©quipe passionn√©e',
                'contract_type': 'CDD',
                'experience_level': 'DEBUTANT',
                'salary_min': 35000,
                'salary_max': 55000,
                'location': 'Lyon',
                'is_remote': False,
                'company': companies[2],
                'created_by': employers[2]
            },

            # Finance & Consulting
            {
                'title': 'Consultant Financier',
                'description': f"Description d√©taill√©e pour le poste de Consultant Financier chez {companies[3].name}.",
                'requirements': f"Pr√©requis pour le poste de Consultant Financier : exp√©rience requise, comp√©tences techniques, etc.",
                'benefits': 'D√©veloppement de carri√®re, salaire attractif',
                'contract_type': 'CDI',
                'experience_level': 'EXPERT',
                'salary_min': 45000,
                'salary_max': 80000,
                'location': 'Marseille',
                'is_remote': True,
                'company': companies[3],
                'created_by': employers[3]
            },
            {
                'title': 'Analyste Financier',
                'description': f"Description d√©taill√©e pour le poste d'Analyste Financier chez {companies[3].name}.",
                'requirements': f"Pr√©requis pour le poste d'Analyste Financier : exp√©rience requise, comp√©tences techniques, etc.",
                'benefits': 'D√©veloppement de carri√®re, salaire attractif',
                'contract_type': 'CDI',
                'experience_level': 'JUNIOR',
                'salary_min': 35000,
                'salary_max': 55000,
                'location': 'Marseille',
                'is_remote': False,
                'company': companies[3],
                'created_by': employers[3]
            },

            # Creative Design Studio
            {
                'title': 'Designer UX/UI',
                'description': f"Description d√©taill√©e pour le poste de Designer UX/UI chez {companies[4].name}.",
                'requirements': f"Pr√©requis pour le poste de Designer UX/UI : exp√©rience requise, comp√©tences techniques, etc.",
                'benefits': 'Environnement cr√©atif, projets vari√©s',
                'contract_type': 'CDI',
                'experience_level': 'SENIOR',
                'salary_min': 45000,
                'salary_max': 80000,
                'location': 'Toulouse',
                'is_remote': True,
                'company': companies[4],
                'created_by': employers[4]
            },
            {
                'title': 'Graphiste Cr√©atif',
                'description': f"Description d√©taill√©e pour le poste de Graphiste Cr√©atif chez {companies[4].name}.",
                'requirements': f"Pr√©requis pour le poste de Graphiste Cr√©atif : exp√©rience requise, comp√©tences techniques, etc.",
                'benefits': 'Environnement cr√©atif, projets vari√©s',
                'contract_type': 'CDD',
                'experience_level': 'JUNIOR',
                'salary_min': 35000,
                'salary_max': 55000,
                'location': 'Toulouse',
                'is_remote': False,
                'company': companies[4],
                'created_by': employers[4]
            }
        ]

        # Cr√©er les offres d'emploi
        print("üíº Cr√©ation des offres d'emploi...")
        for data in jobs_data:
            job, created = Job.objects.get_or_create(
                title=data['title'],
                company=data['company'],
                defaults={
                    'description': data['description'],
                    'requirements': data['requirements'],
                    'benefits': data['benefits'],
                    'contract_type': data['contract_type'],
                    'experience_level': data['experience_level'],
                    'salary_min': data['salary_min'],
                    'salary_max': data['salary_max'],
                    'location': data['location'],
                    'is_remote': data['is_remote'],
                    'is_active': True,
                    'created_by': data['created_by']
                }
            )
            if created:
                print(f"‚úÖ Offre d'emploi {data['title']} cr√©√©e")

        # Cr√©er quelques candidatures de test
        print("üìù Cr√©ation de candidatures de test...")
        test_jobs = Job.objects.all()[:5]  # Premi√®res 5 offres
        for job in test_jobs:
            application, created = Application.objects.get_or_create(
                candidate=test_user,
                job=job,
                defaults={
                    'cover_letter': f"Lettre de motivation pour le poste de {job.title} chez {job.company.name}. Je suis tr√®s int√©ress√© par cette opportunit√© et je pense avoir les comp√©tences n√©cessaires pour ce poste.",
                    'status': 'PENDING'
                }
            )
            if created:
                print(f"‚úÖ Candidature cr√©√©e pour {job.title}")

        print("\nüéâ Initialisation termin√©e avec succ√®s !")
        print("\nüìã Comptes cr√©√©s :")
        print("   üë§ testuser / testpass123 (candidat)")
        print("   üëî techcorp_employer / techcorp123 (employeur)")
        print("   üëî digital_employer / digital123 (employeur)")
        print("   üëî green_employer / green123 (employeur)")
        print("   üëî finance_employer / finance123 (employeur)")
        print("   üëî creative_employer / creative123 (employeur)")
        print("   üëë admin / admin123 (administrateur - √† cr√©er manuellement)")
        print("\nüöÄ Lancez le serveur avec: python manage.py runserver")

    except Exception as e:
        print(f"‚ùå Erreur lors de l'initialisation : {str(e)}")
        sys.exit(1)


if __name__ == '__main__':
    init_database()
